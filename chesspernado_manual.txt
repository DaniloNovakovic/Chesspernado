@2##### CHESSPERNADO MANUAL #####@
    Copyright (C) 2017  Danilo Novakoviæ

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

@2Piece names:@ 
 @7R@ - suicide rook	@3p@ - ai pawn
 @7B@ - bishop 		@6b@ - ai bishop
 @7N@ - knight 
 @7P@ - pawn
 @7K@ - happy king
~
@2# COMMANDS SUPPORTED:@
/@7back@ - goes back to the main menu.
/@7hint@ - prints @2available@ places where a certain piece can move.
	Or prints out info for Happy King, Suicide Rook or empty piece.
/@7random@ - only at init_setup (beginning stage). 
	Generates 3 knights and 2 bishops on random positions.
/@1exit@, /@1end@  - exits the program.
/@7undo@  - undoes previous move. Can be used from start to finish of 
	the CURRENT wave. @1Once the wave completes undo history is deleted!@  
/@3help@ - prints Chesspernado Manual whenever you want during the game.
/@7skip@ - skips 1 move during wave. 
/@7revive@ - you can sacrifice@6 60@ points to revive dead piece 
	(you can set him anywhere from 1 to 5th row)
/@7buy@ - summons @SHOP@ window, from which you can buy certain pieces and 
	features for @6X@ points.

Notation of the moves is as follows: 
@2Piece@/@3column/row@/@1column/row@ 
(@2what piece do you want to move@, @3from where@, @1to where@)
examples: @2B@@3f4@@1d6@, @2N@@3b8@@1c6@ etc.
~
@2## PIECE & MOVEMENT IN CHESSPERNADO:@

- @2SUICIDE ROOK@ (@7R@): Is a special piece that lasts for @7ONE MOVE ONLY.@ 
He first waits for player /other pieces to make a move, and then
sprints forward [i+k][j] until he hits ANYTHING 
(either end of the board, enemy or the player). 
@1Once he collides with an object he will then explode, killing both 
himself and that object (either player or enemy).@ 
User can buy this piece in the shop as many times as he likes as 
long as he has points for it, and he can place as many as the suicide 
rooks he likes. If there are multiply suicide rooks on the board the 
priority will have those in front.
 
- @2HAPPY KING@ (@7K@): Is a special piece that lasts until destroyed. 
@3Happy King is so happy that he won't hurth a fly, meaning that 
he cannot kill other enemy pieces.@ He shares his love of life 
with player, and @3generates 1 point each turn.@ 
Happy king can't be moved. 
User can buy this piece from the shop, and it is generated on random 
positions anywhere from 1st row to 5th, on any column.
~
- @2BISHOP@ (@7B@): can move any number of squares diagonally, 
but cannot leap over other pieces. 
- @1AI_BISHOP@ (@6b@): -rules of regular bishop but will only move in 
following manner. BISHOP AI always @3"wakes up on the left foot"@ 
meaning that he will prioritize moving as far to the bottom-left 
as he can above all. Only if he is unable to move to the left anymore 
will he swap directions.
@3AI_BISHOP will only eat enemy piece if it is caught in this LEFT-RIGHT 
pattern!@  
(@1AI_BISHOP@ is worth@6 12 @points)
~
- @2KNIGHT@ (@7N@): The knight moves to any of the closest squares 
that are not on the same rank, file, or diagonal, thus the move forms 
an @7"L"-shape:@ two squares vertically and one square horizontally, 
or two squares horizontally and one square vertically. 
The knight is the only piece that can leap over other pieces.

- @1AI_PAWN@ (@3p@): The pawn can move forward to the unoccupied 
square immediately in front of it on the same file, or on its first move 
it can advance two squares along the same file, provided both squares are 
unoccupied; or the pawn can capture an opponent's piece on a square 
diagonally in front of it on an adjacent file, by moving to that square. 
The AI_PAWN will prioritize eating enemy piece over going forward. 
(@1AI_PAWN@ is worth@6 6 @points)
~
@2### GOAL OF THE GAME & PHASES@ 
- @3The goal of the game is to stop enemy pawns & bishops from reaching 
to 1st row of the board.@
- If board is FULL on AI's turn, then the game will end.
- If player lost ALL OF HIS PIECES then the game will end.
- At the end of the game player will be prompted to enter the name, 
after what the result will be printed out in the scoreboard.txt
@2NOTE@: Score won't be recorded if the program has been closed with /exit 
command

@2# PHASES:@
@I) Initial setup@
At the beginning of the game player decides places@6 3 @knights and@6 2 @
bishops on any column from 1st to 5th row of the board.
during this phase player can use :
	@7/end, /exit@  - exit the game 
	@7/re@  - resets the initialization setup  
	@7/random@ - generates bishops and knights on random positions.
Upon completion player will be prompted to confirm the setup.

@II) Waves:@
After initial setup, the game beginns, and randomly generated waves beginn.
Each wave gets harder and harder as the game goes on.
~
@2# TURNS:@

@2PLAYER@: Player is able to move@6 1 @piece during his turn 
(with exeption of shop).

@1ENEMY_AI@: During 1 turn @1EVERY@ piece with legal moves will be moved. 
@3If @@1NO PIECE@@3 has @@1ANY LEGAL MOVE@@3 then@@6 N @@3new pawns will be randomaly 
summoned anywhere from 12 to 7th row!@ 
